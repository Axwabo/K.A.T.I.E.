name: Release

on:
  release:
    types: [ created ]

permissions:
  contents: write

jobs:

  build:
    runs-on: ubuntu-latest

    env:
      ReferenceUrl: https://exmod-team.github.io/SL-References/Dev.zip
      ReferencePath: ${{ github.workspace }}/References
      OUT: ${{ github.workspace }}/Out
      OUT_LINUX: ${{ github.workspace }}/Out/Linux
      OUT_WINDOWS: ${{ github.workspace }}/Out/Windows
      OUT_BROWSER: ${{ github.workspace }}/Out/Browser
      OUT_SL: ${{ github.workspace }}/Out/SL

    steps:

      - uses: actions/checkout@v4

      - name: Set Up .NET
        uses: actions/setup-dotnet@v4.0.1
        with:
          dotnet-version: 9.0.x

      - name: Build Desktop
        working-directory: ${{ github.workspace }}/Katie.UI.Desktop
        run: |
          dotnet publish -r linux-x64 -o ${{ env.OUT_LINUX }}
          dotnet publish -r win-x64 -o ${{ env.OUT_WINDOWS }}

      - name: Bundle Linux
        working-directory: ${{ env.OUT_LINUX }}
        run: |
          shopt -s extglob
          rm !(Katie.UI.Desktop)
          mkdir bin
          mv Katie.UI.Desktop bin/
          cp -r ${{ github.workspace }}/THIRD_PARTY_LICENSES LICENSES
          zip -r ${{ env.OUT }}/Katie.UI.Desktop-Linux-x64.zip .

      - name: Bundle Windows
        working-directory: ${{ env.OUT_WINDOWS }}
        run: |
          shopt -s extglob
          rm !(Katie.UI.Desktop.exe)
          mkdir bin
          mv Katie.UI.Desktop.exe bin/
          cp -r ${{ github.workspace }}/THIRD_PARTY_LICENSES LICENSES
          zip -r ${{ env.OUT }}/Katie.UI.Desktop-Windows-x64.zip .

      - name: Download SL References
        run: |
          wget -O "References.zip" ${{ env.ReferenceUrl }}
          unzip -d ${{ env.ReferencePath }} "References.zip"

      - name: Rename Assembly-CSharp and Mirror
        working-directory: ${{ env.ReferencePath }}
        run: |
          mv Assembly-CSharp-Publicized.dll Assembly-CSharp.dll
          mv Mirror-Publicized.dll Mirror.dll

      - name: Build SL
        working-directory: ${{ github.workspace }}/Katie.SecretLab
        run: dotnet build -c Release -o ${{ env.OUT_SL }}

      - name: Copy SL
        working-directory: ${{ env.OUT_SL }}
        run: cp Katie.*.dll ${{ env.OUT }}/

      - name: Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.OUT }}/*

      - name: Install wasm-tools
        run: dotnet workload install wasm-tools

      - name: Build Browser
        working-directory: ${{ github.workspace }}/Katie.UI.Browser
        run: dotnet publish -o ${{ env.OUT_BROWSER }}

      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.OUT_BROWSER }}/wwwroot
  
  deploy:
    runs-on: ubuntu-latest
    needs: build

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      
